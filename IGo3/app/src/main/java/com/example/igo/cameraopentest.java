package com.example.igo;

import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.annotation.RequiresApi;
import androidx.appcompat.app.AppCompatActivity;
import androidx.core.app.ActivityCompat;

import android.Manifest;
import android.content.Intent;
import android.content.pm.PackageManager;
import android.graphics.Bitmap;
import android.net.Uri;
import android.os.Build;
import android.os.Bundle;
import android.os.Environment;
import android.provider.MediaStore;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.Toast;
import android.widget.VideoView;

import java.io.File;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;

public class cameraopentest extends AppCompatActivity {

    private static final int CAMERA_CAP = 1111;

    public void onBackPressed() {
        Intent i=new Intent(cameraopentest.this,takeattendance.class);
        startActivity(i);
    }

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.cameraopentest);
        Button recordButton = (Button) findViewById(R.id.recordButton);
        if ((ActivityCompat.checkSelfPermission(this, Manifest.permission.CAMERA)) != PackageManager.PERMISSION_GRANTED) {
            ActivityCompat.requestPermissions(this, new String[]{Manifest.permission.CAMERA}, 100);
        }

        Intent i = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);
        startActivityForResult(i,CAMERA_CAP);
        recordButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                Intent i = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);
                startActivityForResult(i, CAMERA_CAP);
            }
        });
    }

    @Override
    protected void onActivityResult(int requestCode,
                                    int resultCode, Intent data) {

        super.onActivityResult(requestCode, resultCode, data);
        if (requestCode == CAMERA_CAP) {
            if (resultCode == RESULT_OK) {
                ////il=data;
                Toast.makeText(getApplicationContext(),"CAPTURE OKAY",Toast.LENGTH_SHORT).show();
                //Uri uri = data.getData();
                ImageView iv = (ImageView)findViewById(R.id.imagevw);
                Bitmap photo = (Bitmap) data.getExtras().get("data");
                iv.setImageBitmap(photo);
            } else if (resultCode == RESULT_CANCELED) {
                Toast.makeText(this, "Photo Capturing cancelled.",
                        Toast.LENGTH_LONG).show();
                Intent i = new Intent(cameraopentest.this, takeattendance.class);
                startActivity(i);
            } else {
                Toast.makeText(this, "Failed to take photo",
                        Toast.LENGTH_LONG).show();
                Intent i = new Intent(cameraopentest.this, takeattendance.class);
                startActivity(i);
            }
        }
    }

    @Override
    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {
        super.onRequestPermissionsResult(requestCode, permissions, grantResults);
        if (requestCode == 100) {
            if (grantResults[0] == PackageManager.PERMISSION_GRANTED) {
                Toast.makeText(getApplicationContext(), "Permission granted", Toast.LENGTH_SHORT).show();
            } else {
                Toast.makeText(getApplicationContext(), "Permission denied", Toast.LENGTH_SHORT).show();
            }
        }
    }
}